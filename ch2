2.1	2^n bits
2.2	5 bits(giving 2^5 or 32 possibilities) and 6 bits (2^6 or 64) respectively.
2.3	a. 9 bits.
	b. up to 512 students, so around 112 more.
2.4	2^n integers, with a range of [0, 2^n-1].
2.5
number | 1's complement | signed magnitude | 2's complement
------   --------------   ----------------   --------------
 -7          11000             10111             11001
  7          00111             00111             00111

2.6	100000	
2.7	representation | 2's complement
        --------------   --------------
             0000               0
             0001               1
             0010		2
             0011               3
	     0100               4
             0101               5
             0110               6
             0111               7
             1000              -8
             1001              -7
             1010              -6
             1011              -5
             1100              -4
             1101              -3
             1110              -2
             1111              -1

2.8	a. +127 or 01111111
	b. -128 or 10000000
	c. (2^n)/2 - 1
	d. (2^n)/2

2.9 	Because we know that it that (2^n)/2 - 1 is the largest positive number we can express in 2's complement, we can use this to figure out the number of bits. x = (2^n)/2 - 1, 2(x +1) = 2^n, log2(2(x+1)) = n. Then we can substitue and use the change of base equation to solve: log10(2(6.02 x 10^23) +2)/log10(2) = 79.994. We know we have to round up because we can't use a fraction of a bit, so it takes 80 bits to represent avogadro's number in 2s complement.

2.10	a. 1010, we know it it is negative so we take complement and add 1 to find the magnitutde: 0101 + 0001 = 0110. This is 0*8 + 1*4 + 1*2 + 0*1 = 6. So -6.
	b. 01011010, Starts with a 0, so we know it is positive. 0*2^7 + 1*2^6 + 0*2^5 + 1*2^4 + 1*2^3 + 0*2^2 + 1*2^1 + 0*2^0 = 90.
	c. 11111110. Starts with 1, so we know it is negative, find the magnitude: 00000001 + 00000001 = 00000010, which is 2. So -2.
	d. 0011100111010011. first is 0, so positive.  1 + 2 + 16 + 64 + 128+ 256 + 2048 + 4096 + 8192 = 14803.

2.11	a. 01100110
	b. 01000000
 	c. 00100001
	d. 10000000
	e. 01111111
